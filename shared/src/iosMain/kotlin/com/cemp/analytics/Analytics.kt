package com.cemp.analytics

import dev.gitlive.firebase.analytics.FirebaseAnalytics
import dev.gitlive.firebase.analytics.analytics
import dev.gitlive.firebase.Firebase

/**
 * üçé iOS —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è Firebase Analytics
 * 
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç GitLive Firebase Kotlin SDK, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–¥ –∫–∞–ø–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Firebase iOS SDK.
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏.
 */
actual object Analytics {
    
    private val firebaseAnalytics: FirebaseAnalytics by lazy {
        Firebase.analytics
    }
    
    actual fun logEvent(eventName: String, parameters: Map<String, Any>?) {
        firebaseAnalytics.logEvent(eventName, parameters)
    }
    
    actual fun setUserId(userId: String?) {
        userId?.let { firebaseAnalytics.setUserId(it) }
    }
    
    actual fun setUserProperty(name: String, value: String?) {
        value?.let { firebaseAnalytics.setUserProperty(name, it) }
    }
    
    actual fun logScreenView(screenName: String, screenClass: String?) {
        val parameters = mutableMapOf<String, Any>(
            "screen_name" to screenName
        )
        screenClass?.let { parameters["screen_class"] = it }
        
        firebaseAnalytics.logEvent("screen_view", parameters)
    }
} 